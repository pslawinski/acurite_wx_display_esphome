esphome:
  name: weather-station
  friendly_name: Weather Station
  includes:
    acurite_weather.h

esp8266:
  board: esp_wroom_02

# Disable logging over UART (required)
logger:
  baud_rate: 0

uart:
  baud_rate: 115200
  tx_pin: 1         # hardware dependant
  rx_pin: 3         # hardware dependant
  id: display_uart
#   debug:  # uncomment this block to show debug UART data
#     sequence: 
#       then:
#         lambda: |-
#           UARTDebug::log_string(direction, bytes);

globals:
  - id: wind_dir
    type: Sensor*
  - id: wind_spd
    type: Sensor*
  - id: wind_gst
    type: Sensor*
  - id: temp
    type: Sensor*
  - id: rainfall_24h
    type: Sensor*
  - id: pressure
    type: Sensor*
  - id: dewpt
    type: Sensor*
  - id: humid
    type: Sensor*

sensor:
- platform: custom
  lambda: |-
    auto wx_station_display = new AcuriteWeather(id(display_uart));
    App.register_component(wx_station_display);
    id(wind_dir) = &wx_station_display->wind_dir;
    id(wind_spd) = &wx_station_display->wind_spd;
    id(wind_gst) = &wx_station_display->wind_gst;
    id(temp) = &wx_station_display->temp;
    id(rainfall_24h) = &wx_station_display->rainfall_24h;
    id(pressure) = &wx_station_display->pressure;
    id(dewpt) = &wx_station_display->dewpt;
    id(humid) = &wx_station_display->humid;    

    return {
      id(wind_dir),
      id(wind_spd),
      id(wind_gst),
      id(temp),
      id(rainfall_24h),
      id(pressure),
      id(dewpt),
      id(humid)
    };
  sensors:
  - name: "Wind Direction"
    unit_of_measurement: "°"
    icon: "mdi:windsock"
    state_class: "measurement"
    accuracy_decimals: 1
  - name: "Wind Speed"
    unit_of_measurement: "mph"
    icon: "mdi:weather-windy"
    device_class: "wind_speed"
    state_class: "measurement"
  - name: "Wind Speed (gust)"
    unit_of_measurement: "mph"
    icon: "mdi:weather-windy"
    device_class: "wind_speed"
    state_class: "measurement"
  - name: "Temperature"
    unit_of_measurement: "°F"
    icon: "mdi:thermometer"
    device_class: "temperature"
    state_class: "measurement"
  - name: "Rainfall (24hrs)"
    unit_of_measurement: "in"
    icon: "mdi:ruler"
    state_class: "measurement"
    accuracy_decimals: 2
  - name: "Barometric Pressure"
    unit_of_measurement: "inHg"
    icon: "mdi:gauge"
    device_class: "pressure"
    state_class: "measurement"
    accuracy_decimals: 2
  - name: "Dewpoint"
    unit_of_measurement: "°F"
    icon: "mdi:thermometer"
    device_class: "temperature"
    state_class: "measurement"
  - name: "Humidity"
    unit_of_measurement: "%"
    icon: "mdi:water-percent"
    device_class: "humidity"
    state_class: "measurement"

# Enable Home Assistant API
api:
  encryption:
    key: "<ENCRYPTION KEY>"
  services:
    - service: set_forecast
      variables:
        forecast: string
      then:
        lambda: |-
          id(display_uart)->write_str(forecast.c_str());

ota:
  password: "<PASSWORD>"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  #fast_connect: true # un-comment if your SSID is hidden

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Weather-Station Fallback Hotspot"
    password: "<PASSWORD>"

captive_portal:
    